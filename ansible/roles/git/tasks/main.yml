---
- name: Build | Check if git is already installed
  shell: git --version
  ignore_errors: true
  register: git_result
  tags:
    - build
    - git

- name: Build | Install deps
  apt: name={{ item }} state=present
  when: git_result|failed
  with_items:
    - libcurl4-gnutls-dev
    - libexpat1-dev
    - gettext
    - libz-dev
    - libssl-dev
    - autoconf
  tags:
    - build
    - git

- name: Build | Get last stable version
  get_url: url=https://github.com/git/git/archive/v{{ monolith_git_version }}.tar.gz dest=/tmp/v{{ monolith_git_version }}.tar.gz
  when: git_result|failed
  tags:
    - build
    - git

- name: Build | Extract last stable version
  command: tar -xvzf "{{ item.source }}" chdir="{{ item.chdir }}" creates="{{ item.create }}" warn="{{ item.warn }}"
  when: git_result|failed
  with_items:
    - { source: "/tmp/v{{ monolith_git_version }}.tar.gz", chdir: "/tmp/", create: "/tmp/git-{{ monolith_git_version }}/README", warn: "true" }
  tags:
    - build
    - git

- name: Build | Configure last stable version
  command: "{{ item }} chdir=/tmp/git-{{ monolith_git_version }}"
  when: git_result|failed
  with_items:
    - "make configure"
    - "./configure --prefix=/usr"
    - "make install"
  tags:
    - build
    - git
